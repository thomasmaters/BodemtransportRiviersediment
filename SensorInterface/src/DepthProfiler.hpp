/*
 * DepthProfiler.hpp
 *
 *  Created on: 2 Jul 2018
 *      Author: Thomas Maters
 *		Email : thomasmaters@hotmail.com (TG.Maters@student.han.nl)
 */

#ifndef SRC_DEPTHPROFILER_HPP_
#define SRC_DEPTHPROFILER_HPP_

#include "DataBuffer.hpp"
#include "FileHandler.hpp"
#include "Matrix.hpp"

#include <thread>
#include <vector>

#define MAX_ITERATIONS 100
#define STEP_SIZE 1e-5

namespace Controller
{
/*
 *
 */
// Datapoints per ping. Type to store the pings as.
template <std::size_t N, typename T = float>
class DepthProfiler
{
    static_assert(std::is_arithmetic<T>::value, "Type must be aritmatic.");

  public:
    DepthProfiler()
    {
        try
        {
            Matrix<1000, 2, T> inputs({
                { 0.0, 4.0 },
                { 0.1695, 4.03875 },
                { 0.376, 4.1000000000000005 },
                { 0.6164999999999999, 4.17625 },
                { 0.8879999999999999, 4.26 },
                { 1.1875, 4.34375 },
                { 1.512, 4.42 },
                { 1.8584999999999998, 4.48125 },
                { 2.2239999999999998, 4.519999999999999 },
                { 2.6055000000000006, 4.52875 },
                { 3.0, 4.5 },
                { 3.4235, 4.41975 },
                { 3.888, 4.288 },
                { 4.384499999999999, 4.11825 },
                { 4.904, 3.9239999999999995 },
                { 5.4375, 3.71875 },
                { 5.976, 3.5160000000000005 },
                { 6.5105, 3.3292499999999996 },
                { 7.031999999999999, 3.1719999999999997 },
                { 7.5315, 3.0577499999999995 },
                { 8.0, 3.0 },
                { 8.444999999999999, 3.0010000000000003 },
                { 8.88, 3.0480000000000005 },
                { 9.305, 3.1319999999999997 },
                { 9.719999999999999, 3.2439999999999998 },
                { 10.125, 3.375 },
                { 10.520000000000001, 3.516 },
                { 10.905000000000001, 3.658 },
                { 11.279999999999998, 3.792 },
                { 11.645, 3.909 },
                { 12.0, 4.0 },
                { 12.3315, 4.07925 },
                { 12.632, 4.164 },
                { 12.910499999999999, 4.24975 },
                { 13.175999999999998, 4.332 },
                { 13.4375, 4.40625 },
                { 13.704, 4.468 },
                { 13.984499999999999, 4.51275 },
                { 14.288, 4.535999999999999 },
                { 14.6235, 4.53325 },
                { 15.0, 4.5 },
                { 15.423499999999997, 4.41975 },
                { 15.887999999999998, 4.288 },
                { 16.3845, 4.11825 },
                { 16.904, 3.9239999999999995 },
                { 17.4375, 3.71875 },
                { 17.976, 3.5160000000000005 },
                { 18.510499999999997, 3.3292499999999996 },
                { 19.031999999999996, 3.1719999999999997 },
                { 19.5315, 3.0577499999999995 },
                { 20.0, 3.0 },
                { 20.444999999999997, 3.0010000000000003 },
                { 20.880000000000003, 3.0480000000000005 },
                { 21.305, 3.1319999999999997 },
                { 21.72, 3.2439999999999998 },
                { 22.125, 3.375 },
                { 22.520000000000003, 3.516 },
                { 22.904999999999998, 3.658 },
                { 23.279999999999994, 3.792 },
                { 23.645, 3.909 },
                { 24.0, 4.0 },
                { 24.331500000000002, 4.07925 },
                { 24.632, 4.164 },
                { 24.910500000000003, 4.24975 },
                { 25.176000000000002, 4.332 },
                { 25.4375, 4.40625 },
                { 25.704, 4.468 },
                { 25.9845, 4.51275 },
                { 26.287999999999997, 4.535999999999999 },
                { 26.6235, 4.53325 },
                { 27.0, 4.5 },
                { 27.423499999999997, 4.41975 },
                { 27.888, 4.288 },
                { 28.3845, 4.11825 },
                { 28.903999999999996, 3.9239999999999995 },
                { 29.4375, 3.71875 },
                { 29.976, 3.5160000000000005 },
                { 30.5105, 3.3292499999999996 },
                { 31.031999999999996, 3.1719999999999997 },
                { 31.5315, 3.0577499999999995 },
                { 32.0, 3.0 },
                { 32.445, 3.0010000000000003 },
                { 32.879999999999995, 3.0480000000000005 },
                { 33.305, 3.1319999999999997 },
                { 33.72, 3.2439999999999998 },
                { 34.125, 3.375 },
                { 34.52, 3.516 },
                { 34.905, 3.658 },
                { 35.279999999999994, 3.792 },
                { 35.645, 3.909 },
                { 36.0, 4.0 },
                { 36.3315, 4.07925 },
                { 36.632, 4.164 },
                { 36.9105, 4.24975 },
                { 37.175999999999995, 4.332 },
                { 37.4375, 4.40625 },
                { 37.704, 4.468 },
                { 37.9845, 4.51275 },
                { 38.288, 4.535999999999999 },
                { 38.62350000000001, 4.53325 },
                { 39.0, 4.5 },
                { 39.4235, 4.41975 },
                { 39.888, 4.288 },
                { 40.3845, 4.11825 },
                { 40.903999999999996, 3.9239999999999995 },
                { 41.4375, 3.71875 },
                { 41.976, 3.5160000000000005 },
                { 42.5105, 3.3292499999999996 },
                { 43.032, 3.1719999999999997 },
                { 43.531499999999994, 3.0577499999999995 },
                { 44.0, 3.0 },
                { 44.44499999999999, 3.0010000000000003 },
                { 44.879999999999995, 3.0480000000000005 },
                { 45.305, 3.1319999999999997 },
                { 45.72, 3.2439999999999998 },
                { 46.125, 3.375 },
                { 46.52000000000001, 3.516 },
                { 46.904999999999994, 3.658 },
                { 47.279999999999994, 3.792 },
                { 47.644999999999996, 3.909 },
                { 48.0, 4.0 },
                { 48.3315, 4.07925 },
                { 48.632000000000005, 4.164 },
                { 48.91049999999999, 4.24975 },
                { 49.176, 4.332 },
                { 49.4375, 4.40625 },
                { 49.70399999999999, 4.468 },
                { 49.9845, 4.51275 },
                { 50.28799999999999, 4.535999999999999 },
                { 50.62349999999999, 4.53325 },
                { 51.0, 4.5 },
                { 51.42349999999999, 4.41975 },
                { 51.888, 4.288 },
                { 52.3845, 4.11825 },
                { 52.903999999999996, 3.9239999999999995 },
                { 53.4375, 3.71875 },
                { 53.976000000000006, 3.5160000000000005 },
                { 54.51049999999999, 3.3292499999999996 },
                { 55.032, 3.1719999999999997 },
                { 55.5315, 3.0577499999999995 },
                { 56.0, 3.0 },
                { 56.445, 3.0010000000000003 },
                { 56.879999999999995, 3.0480000000000005 },
                { 57.305, 3.1319999999999997 },
                { 57.72, 3.2439999999999998 },
                { 58.125, 3.375 },
                { 58.52, 3.516 },
                { 58.905, 3.658 },
                { 59.28, 3.792 },
                { 59.645, 3.909 },
                { 60.0, 4.0 },
                { 60.3315, 4.07925 },
                { 60.632, 4.164 },
                { 60.91049999999999, 4.24975 },
                { 61.175999999999995, 4.332 },
                { 61.4375, 4.40625 },
                { 61.70400000000001, 4.468 },
                { 61.9845, 4.51275 },
                { 62.28799999999998, 4.535999999999999 },
                { 62.6235, 4.53325 },
                { 63.0, 4.5 },
                { 63.4235, 4.41975 },
                { 63.888000000000005, 4.288 },
                { 64.3845, 4.11825 },
                { 64.904, 3.9239999999999995 },
                { 65.4375, 3.71875 },
                { 65.976, 3.5160000000000005 },
                { 66.5105, 3.3292499999999996 },
                { 67.03199999999998, 3.1719999999999997 },
                { 67.53150000000001, 3.0577499999999995 },
                { 68.0, 3.0 },
                { 68.445, 3.0010000000000003 },
                { 68.88000000000001, 3.0480000000000005 },
                { 69.305, 3.1319999999999997 },
                { 69.72, 3.2439999999999998 },
                { 70.125, 3.375 },
                { 70.52, 3.516 },
                { 70.905, 3.658 },
                { 71.27999999999999, 3.792 },
                { 71.645, 3.909 },
                { 72.0, 4.0 },
                { 72.33149999999999, 4.07925 },
                { 72.632, 4.164 },
                { 72.9105, 4.24975 },
                { 73.17599999999999, 4.332 },
                { 73.4375, 4.40625 },
                { 73.704, 4.468 },
                { 73.9845, 4.51275 },
                { 74.28799999999998, 4.535999999999999 },
                { 74.6235, 4.53325 },
                { 75.0, 4.5 },
                { 75.4235, 4.41975 },
                { 75.888, 4.288 },
                { 76.38449999999999, 4.11825 },
                { 76.90400000000001, 3.9239999999999995 },
                { 77.4375, 3.71875 },
                { 77.976, 3.5160000000000005 },
                { 78.51049999999998, 3.3292499999999996 },
                { 79.03199999999998, 3.1719999999999997 },
                { 79.53149999999998, 3.0577499999999995 },
                { 80.0, 3.0 },
                { 80.44500000000001, 3.0010000000000003 },
                { 80.88000000000001, 3.0480000000000005 },
                { 81.30499999999999, 3.1319999999999997 },
                { 81.71999999999998, 3.2439999999999998 },
                { 82.125, 3.375 },
                { 82.52000000000001, 3.516 },
                { 82.905, 3.658 },
                { 83.27999999999999, 3.792 },
                { 83.645, 3.909 },
                { 84.0, 4.0 },
                { 84.3315, 4.07925 },
                { 84.632, 4.164 },
                { 84.9105, 4.24975 },
                { 85.176, 4.332 },
                { 85.4375, 4.40625 },
                { 85.70400000000001, 4.468 },
                { 85.9845, 4.51275 },
                { 86.28799999999998, 4.535999999999999 },
                { 86.62349999999999, 4.53325 },
                { 87.0, 4.5 },
                { 87.42349999999999, 4.41975 },
                { 87.888, 4.288 },
                { 88.38449999999999, 4.11825 },
                { 88.90399999999998, 3.9239999999999995 },
                { 89.4375, 3.71875 },
                { 89.976, 3.5160000000000005 },
                { 90.5105, 3.3292499999999996 },
                { 91.03199999999998, 3.1719999999999997 },
                { 91.5315, 3.0577499999999995 },
                { 92.0, 3.0 },
                { 92.44500000000001, 3.0010000000000003 },
                { 92.88, 3.0480000000000005 },
                { 93.305, 3.1319999999999997 },
                { 93.72000000000001, 3.2439999999999998 },
                { 94.125, 3.375 },
                { 94.52000000000001, 3.516 },
                { 94.905, 3.658 },
                { 95.27999999999999, 3.792 },
                { 95.645, 3.909 },
                { 96.0, 4.0 },
                { 96.33149999999999, 4.07925 },
                { 96.632, 4.164 },
                { 96.9105, 4.24975 },
                { 97.176, 4.332 },
                { 97.4375, 4.40625 },
                { 97.70400000000001, 4.468 },
                { 97.9845, 4.51275 },
                { 98.28799999999998, 4.535999999999999 },
                { 98.62349999999999, 4.53325 },
                { 99.0, 4.5 },
                { 99.42349999999998, 4.41975 },
                { 99.88799999999999, 4.288 },
                { 100.38449999999999, 4.11825 },
                { 100.904, 3.9239999999999995 },
                { 101.4375, 3.71875 },
                { 101.97600000000001, 3.5160000000000005 },
                { 102.5105, 3.3292499999999996 },
                { 103.03199999999998, 3.1719999999999997 },
                { 103.5315, 3.0577499999999995 },
                { 104.0, 3.0 },
                { 104.445, 3.0010000000000003 },
                { 104.88000000000001, 3.0480000000000005 },
                { 105.305, 3.1319999999999997 },
                { 105.72, 3.2439999999999998 },
                { 106.125, 3.375 },
                { 106.52, 3.516 },
                { 106.90499999999999, 3.658 },
                { 107.27999999999999, 3.792 },
                { 107.645, 3.909 },
                { 108.0, 4.0 },
                { 108.33149999999998, 4.07925 },
                { 108.632, 4.164 },
                { 108.91049999999998, 4.24975 },
                { 109.176, 4.332 },
                { 109.4375, 4.40625 },
                { 109.70400000000001, 4.468 },
                { 109.9845, 4.51275 },
                { 110.28799999999998, 4.535999999999999 },
                { 110.6235, 4.53325 },
                { 111.0, 4.5 },
                { 111.42349999999999, 4.41975 },
                { 111.88799999999999, 4.288 },
                { 112.3845, 4.11825 },
                { 112.904, 3.9239999999999995 },
                { 113.4375, 3.71875 },
                { 113.97600000000001, 3.5160000000000005 },
                { 114.51050000000001, 3.3292499999999996 },
                { 115.03199999999998, 3.1719999999999997 },
                { 115.5315, 3.0577499999999995 },
                { 116.0, 3.0 },
                { 116.44499999999998, 3.0010000000000003 },
                { 116.88, 3.0480000000000005 },
                { 117.30499999999999, 3.1319999999999997 },
                { 117.71999999999998, 3.2439999999999998 },
                { 118.125, 3.375 },
                { 118.52000000000001, 3.516 },
                { 118.905, 3.658 },
                { 119.27999999999999, 3.792 },
                { 119.645, 3.909 },
                { 120.0, 4.0 },
                { 120.3315, 4.07925 },
                { 120.63199999999999, 4.164 },
                { 120.9105, 4.24975 },
                { 121.17599999999999, 4.332 },
                { 121.4375, 4.40625 },
                { 121.70400000000002, 4.468 },
                { 121.98449999999998, 4.51275 },
                { 122.28799999999998, 4.535999999999999 },
                { 122.62349999999999, 4.53325 },
                { 123.0, 4.5 },
                { 123.4235, 4.41975 },
                { 123.88800000000002, 4.288 },
                { 124.38450000000002, 4.11825 },
                { 124.90399999999998, 3.9239999999999995 },
                { 125.4375, 3.71875 },
                { 125.97600000000001, 3.5160000000000005 },
                { 126.51050000000001, 3.3292499999999996 },
                { 127.03199999999998, 3.1719999999999997 },
                { 127.5315, 3.0577499999999995 },
                { 128.0, 3.0 },
                { 128.44500000000002, 3.0010000000000003 },
                { 128.88000000000002, 3.0480000000000005 },
                { 129.305, 3.1319999999999997 },
                { 129.72, 3.2439999999999998 },
                { 130.125, 3.375 },
                { 130.52, 3.516 },
                { 130.90499999999997, 3.658 },
                { 131.27999999999997, 3.792 },
                { 131.645, 3.909 },
                { 132.0, 4.0 },
                { 132.3315, 4.07925 },
                { 132.632, 4.164 },
                { 132.91049999999998, 4.24975 },
                { 133.17600000000002, 4.332 },
                { 133.4375, 4.40625 },
                { 133.70399999999998, 4.468 },
                { 133.9845, 4.51275 },
                { 134.28799999999998, 4.535999999999999 },
                { 134.6235, 4.53325 },
                { 135.0, 4.5 },
                { 135.4235, 4.41975 },
                { 135.888, 4.288 },
                { 136.3845, 4.11825 },
                { 136.90399999999997, 3.9239999999999995 },
                { 137.4375, 3.71875 },
                { 137.97600000000003, 3.5160000000000005 },
                { 138.51049999999998, 3.3292499999999996 },
                { 139.03199999999998, 3.1719999999999997 },
                { 139.5315, 3.0577499999999995 },
                { 140.0, 3.0 },
                { 140.445, 3.0010000000000003 },
                { 140.88, 3.0480000000000005 },
                { 141.30499999999998, 3.1319999999999997 },
                { 141.72, 3.2439999999999998 },
                { 142.125, 3.375 },
                { 142.51999999999998, 3.516 },
                { 142.905, 3.658 },
                { 143.27999999999997, 3.792 },
                { 143.64499999999998, 3.909 },
                { 144.0, 4.0 },
                { 144.3315, 4.07925 },
                { 144.632, 4.164 },
                { 144.91049999999998, 4.24975 },
                { 145.176, 4.332 },
                { 145.4375, 4.40625 },
                { 145.70400000000004, 4.468 },
                { 145.9845, 4.51275 },
                { 146.28799999999998, 4.535999999999999 },
                { 146.6235, 4.53325 },
                { 147.0, 4.5 },
                { 147.4235, 4.41975 },
                { 147.88799999999998, 4.288 },
                { 148.3845, 4.11825 },
                { 148.904, 3.9239999999999995 },
                { 149.4375, 3.71875 },
                { 149.976, 3.5160000000000005 },
                { 150.51049999999998, 3.3292499999999996 },
                { 151.03199999999998, 3.1719999999999997 },
                { 151.5315, 3.0577499999999995 },
                { 152.0, 3.0 },
                { 152.44500000000002, 3.0010000000000003 },
                { 152.88, 3.0480000000000005 },
                { 153.305, 3.1319999999999997 },
                { 153.71999999999997, 3.2439999999999998 },
                { 154.125, 3.375 },
                { 154.52, 3.516 },
                { 154.905, 3.658 },
                { 155.28, 3.792 },
                { 155.64499999999998, 3.909 },
                { 156.0, 4.0 },
                { 156.33149999999998, 4.07925 },
                { 156.63199999999998, 4.164 },
                { 156.9105, 4.24975 },
                { 157.176, 4.332 },
                { 157.4375, 4.40625 },
                { 157.704, 4.468 },
                { 157.9845, 4.51275 },
                { 158.28799999999995, 4.535999999999999 },
                { 158.62349999999998, 4.53325 },
                { 159.0, 4.5 },
                { 159.4235, 4.41975 },
                { 159.888, 4.288 },
                { 160.3845, 4.11825 },
                { 160.904, 3.9239999999999995 },
                { 161.4375, 3.71875 },
                { 161.976, 3.5160000000000005 },
                { 162.51049999999998, 3.3292499999999996 },
                { 163.03199999999998, 3.1719999999999997 },
                { 163.53149999999997, 3.0577499999999995 },
                { 164.0, 3.0 },
                { 164.445, 3.0010000000000003 },
                { 164.88000000000002, 3.0480000000000005 },
                { 165.30499999999998, 3.1319999999999997 },
                { 165.72, 3.2439999999999998 },
                { 166.125, 3.375 },
                { 166.52, 3.516 },
                { 166.905, 3.658 },
                { 167.28, 3.792 },
                { 167.64499999999998, 3.909 },
                { 168.0, 4.0 },
                { 168.3315, 4.07925 },
                { 168.632, 4.164 },
                { 168.91049999999998, 4.24975 },
                { 169.17600000000002, 4.332 },
                { 169.4375, 4.40625 },
                { 169.704, 4.468 },
                { 169.9845, 4.51275 },
                { 170.28799999999998, 4.535999999999999 },
                { 170.62349999999998, 4.53325 },
                { 171.0, 4.5 },
                { 171.4235, 4.41975 },
                { 171.888, 4.288 },
                { 172.38450000000003, 4.11825 },
                { 172.904, 3.9239999999999995 },
                { 173.4375, 3.71875 },
                { 173.97600000000003, 3.5160000000000005 },
                { 174.5105, 3.3292499999999996 },
                { 175.03199999999998, 3.1719999999999997 },
                { 175.5315, 3.0577499999999995 },
                { 176.0, 3.0 },
                { 176.445, 3.0010000000000003 },
                { 176.88000000000002, 3.0480000000000005 },
                { 177.305, 3.1319999999999997 },
                { 177.72, 3.2439999999999998 },
                { 178.125, 3.375 },
                { 178.52000000000004, 3.516 },
                { 178.905, 3.658 },
                { 179.28, 3.792 },
                { 179.645, 3.909 },
                { 180.0, 4.0 },
                { 180.3315, 4.07925 },
                { 180.63199999999998, 4.164 },
                { 180.91049999999998, 4.24975 },
                { 181.176, 4.332 },
                { 181.4375, 4.40625 },
                { 181.704, 4.468 },
                { 181.9845, 4.51275 },
                { 182.28799999999998, 4.535999999999999 },
                { 182.62349999999998, 4.53325 },
                { 183.0, 4.5 },
                { 183.42349999999996, 4.41975 },
                { 183.888, 4.288 },
                { 184.3845, 4.11825 },
                { 184.904, 3.9239999999999995 },
                { 185.4375, 3.71875 },
                { 185.976, 3.5160000000000005 },
                { 186.5105, 3.3292499999999996 },
                { 187.03199999999998, 3.1719999999999997 },
                { 187.5315, 3.0577499999999995 },
                { 188.0, 3.0 },
                { 188.445, 3.0010000000000003 },
                { 188.88000000000002, 3.0480000000000005 },
                { 189.30499999999998, 3.1319999999999997 },
                { 189.71999999999997, 3.2439999999999998 },
                { 190.125, 3.375 },
                { 190.52, 3.516 },
                { 190.90499999999997, 3.658 },
                { 191.28, 3.792 },
                { 191.64499999999998, 3.909 },
                { 192.0, 4.0 },
                { 192.33149999999998, 4.07925 },
                { 192.632, 4.164 },
                { 192.91049999999996, 4.24975 },
                { 193.17600000000002, 4.332 },
                { 193.4375, 4.40625 },
                { 193.704, 4.468 },
                { 193.98450000000003, 4.51275 },
                { 194.28799999999995, 4.535999999999999 },
                { 194.62349999999998, 4.53325 },
                { 195.0, 4.5 },
                { 195.42349999999996, 4.41975 },
                { 195.88799999999998, 4.288 },
                { 196.38450000000003, 4.11825 },
                { 196.904, 3.9239999999999995 },
                { 197.4375, 3.71875 },
                { 197.97600000000003, 3.5160000000000005 },
                { 198.51049999999998, 3.3292499999999996 },
                { 199.03199999999995, 3.1719999999999997 },
                { 199.5315, 3.0577499999999995 },
                { 200.0, 3.0 },
                { 200.44499999999996, 3.0010000000000003 },
                { 200.88, 3.0480000000000005 },
                { 201.30499999999998, 3.1319999999999997 },
                { 201.72, 3.2439999999999998 },
                { 202.125, 3.375 },
                { 202.52, 3.516 },
                { 202.90499999999997, 3.658 },
                { 203.27999999999997, 3.792 },
                { 203.64499999999998, 3.909 },
                { 204.0, 4.0 },
                { 204.33149999999998, 4.07925 },
                { 204.632, 4.164 },
                { 204.9105, 4.24975 },
                { 205.176, 4.332 },
                { 205.4375, 4.40625 },
                { 205.704, 4.468 },
                { 205.98450000000003, 4.51275 },
                { 206.28799999999998, 4.535999999999999 },
                { 206.6235, 4.53325 },
                { 207.0, 4.5 },
                { 207.42349999999996, 4.41975 },
                { 207.888, 4.288 },
                { 208.3845, 4.11825 },
                { 208.904, 3.9239999999999995 },
                { 209.4375, 3.71875 },
                { 209.97600000000003, 3.5160000000000005 },
                { 210.51049999999998, 3.3292499999999996 },
                { 211.03199999999998, 3.1719999999999997 },
                { 211.5315, 3.0577499999999995 },
                { 212.0, 3.0 },
                { 212.44499999999996, 3.0010000000000003 },
                { 212.88000000000002, 3.0480000000000005 },
                { 213.305, 3.1319999999999997 },
                { 213.72, 3.2439999999999998 },
                { 214.125, 3.375 },
                { 214.52, 3.516 },
                { 214.905, 3.658 },
                { 215.28, 3.792 },
                { 215.645, 3.909 },
                { 216.0, 4.0 },
                { 216.33149999999995, 4.07925 },
                { 216.632, 4.164 },
                { 216.91049999999998, 4.24975 },
                { 217.176, 4.332 },
                { 217.4375, 4.40625 },
                { 217.704, 4.468 },
                { 217.98450000000003, 4.51275 },
                { 218.28799999999995, 4.535999999999999 },
                { 218.62349999999998, 4.53325 },
                { 219.0, 4.5 },
                { 219.4235, 4.41975 },
                { 219.888, 4.288 },
                { 220.38450000000003, 4.11825 },
                { 220.904, 3.9239999999999995 },
                { 221.4375, 3.71875 },
                { 221.97600000000003, 3.5160000000000005 },
                { 222.51049999999998, 3.3292499999999996 },
                { 223.03199999999995, 3.1719999999999997 },
                { 223.5315, 3.0577499999999995 },
                { 224.0, 3.0 },
                { 224.445, 3.0010000000000003 },
                { 224.88000000000002, 3.0480000000000005 },
                { 225.305, 3.1319999999999997 },
                { 225.72, 3.2439999999999998 },
                { 226.125, 3.375 },
                { 226.52, 3.516 },
                { 226.905, 3.658 },
                { 227.27999999999997, 3.792 },
                { 227.64499999999998, 3.909 },
                { 228.0, 4.0 },
                { 228.33149999999998, 4.07925 },
                { 228.63199999999998, 4.164 },
                { 228.91049999999998, 4.24975 },
                { 229.17600000000002, 4.332 },
                { 229.4375, 4.40625 },
                { 229.70400000000004, 4.468 },
                { 229.98450000000003, 4.51275 },
                { 230.28799999999995, 4.535999999999999 },
                { 230.6235, 4.53325 },
                { 231.0, 4.5 },
                { 231.42349999999996, 4.41975 },
                { 231.88799999999998, 4.288 },
                { 232.3845, 4.11825 },
                { 232.90399999999997, 3.9239999999999995 },
                { 233.4375, 3.71875 },
                { 233.97600000000003, 3.5160000000000005 },
                { 234.51049999999998, 3.3292499999999996 },
                { 235.03199999999998, 3.1719999999999997 },
                { 235.5315, 3.0577499999999995 },
                { 236.0, 3.0 },
                { 236.44499999999996, 3.0010000000000003 },
                { 236.88, 3.0480000000000005 },
                { 237.30499999999998, 3.1319999999999997 },
                { 237.71999999999997, 3.2439999999999998 },
                { 238.125, 3.375 },
                { 238.52, 3.516 },
                { 238.90499999999997, 3.658 },
                { 239.28, 3.792 },
                { 239.64499999999998, 3.909 },
                { 240.0, 4.0 },
                { 240.33149999999998, 4.07925 },
                { 240.632, 4.164 },
                { 240.91049999999998, 4.24975 },
                { 241.176, 4.332 },
                { 241.4375, 4.40625 },
                { 241.704, 4.468 },
                { 241.98449999999997, 4.51275 },
                { 242.28799999999995, 4.535999999999999 },
                { 242.6235, 4.53325 },
                { 243.0, 4.5 },
                { 243.4235, 4.41975 },
                { 243.888, 4.288 },
                { 244.3845, 4.11825 },
                { 244.904, 3.9239999999999995 },
                { 245.4375, 3.71875 },
                { 245.976, 3.5160000000000005 },
                { 246.51050000000004, 3.3292499999999996 },
                { 247.03199999999998, 3.1719999999999997 },
                { 247.53149999999997, 3.0577499999999995 },
                { 248.0, 3.0 },
                { 248.44499999999996, 3.0010000000000003 },
                { 248.88000000000002, 3.0480000000000005 },
                { 249.30499999999998, 3.1319999999999997 },
                { 249.71999999999997, 3.2439999999999998 },
                { 250.125, 3.375 },
                { 250.51999999999998, 3.516 },
                { 250.90499999999997, 3.658 },
                { 251.27999999999997, 3.792 },
                { 251.64499999999998, 3.909 },
                { 252.0, 4.0 },
                { 252.33149999999998, 4.07925 },
                { 252.63200000000003, 4.164 },
                { 252.9105, 4.24975 },
                { 253.17600000000002, 4.332 },
                { 253.4375, 4.40625 },
                { 253.70400000000004, 4.468 },
                { 253.98450000000003, 4.51275 },
                { 254.288, 4.535999999999999 },
                { 254.6235, 4.53325 },
                { 255.0, 4.5 },
                { 255.4235, 4.41975 },
                { 255.88800000000003, 4.288 },
                { 256.38450000000006, 4.11825 },
                { 256.90399999999994, 3.9239999999999995 },
                { 257.4375, 3.71875 },
                { 257.976, 3.5160000000000005 },
                { 258.5105, 3.3292499999999996 },
                { 259.032, 3.1719999999999997 },
                { 259.5315, 3.0577499999999995 },
                { 260.0, 3.0 },
                { 260.445, 3.0010000000000003 },
                { 260.88000000000005, 3.0480000000000005 },
                { 261.305, 3.1319999999999997 },
                { 261.72, 3.2439999999999998 },
                { 262.125, 3.375 },
                { 262.52000000000004, 3.516 },
                { 262.905, 3.658 },
                { 263.2799999999999, 3.792 },
                { 263.64500000000004, 3.909 },
                { 264.0, 4.0 },
                { 264.3315, 4.07925 },
                { 264.632, 4.164 },
                { 264.9105, 4.24975 },
                { 265.176, 4.332 },
                { 265.4375, 4.40625 },
                { 265.704, 4.468 },
                { 265.98449999999997, 4.51275 },
                { 266.28799999999995, 4.535999999999999 },
                { 266.6234999999999, 4.53325 },
                { 267.0, 4.5 },
                { 267.42349999999993, 4.41975 },
                { 267.88800000000003, 4.288 },
                { 268.38449999999995, 4.11825 },
                { 268.90400000000005, 3.9239999999999995 },
                { 269.4375, 3.71875 },
                { 269.976, 3.5160000000000005 },
                { 270.5105, 3.3292499999999996 },
                { 271.032, 3.1719999999999997 },
                { 271.5315, 3.0577499999999995 },
                { 272.0, 3.0 },
                { 272.445, 3.0010000000000003 },
                { 272.88000000000005, 3.0480000000000005 },
                { 273.305, 3.1319999999999997 },
                { 273.71999999999997, 3.2439999999999998 },
                { 274.125, 3.375 },
                { 274.52, 3.516 },
                { 274.905, 3.658 },
                { 275.28, 3.792 },
                { 275.645, 3.909 },
                { 276.0, 4.0 },
                { 276.3314999999999, 4.07925 },
                { 276.63200000000006, 4.164 },
                { 276.91049999999996, 4.24975 },
                { 277.176, 4.332 },
                { 277.4375, 4.40625 },
                { 277.70400000000006, 4.468 },
                { 277.98449999999997, 4.51275 },
                { 278.28799999999995, 4.535999999999999 },
                { 278.6235, 4.53325 },
                { 279.0, 4.5 },
                { 279.4235, 4.41975 },
                { 279.888, 4.288 },
                { 280.3845, 4.11825 },
                { 280.904, 3.9239999999999995 },
                { 281.4375, 3.71875 },
                { 281.976, 3.5160000000000005 },
                { 282.5105, 3.3292499999999996 },
                { 283.0319999999999, 3.1719999999999997 },
                { 283.5315, 3.0577499999999995 },
                { 284.0, 3.0 },
                { 284.44499999999994, 3.0010000000000003 },
                { 284.88, 3.0480000000000005 },
                { 285.305, 3.1319999999999997 },
                { 285.71999999999997, 3.2439999999999998 },
                { 286.125, 3.375 },
                { 286.52, 3.516 },
                { 286.905, 3.658 },
                { 287.2799999999999, 3.792 },
                { 287.6449999999999, 3.909 },
                { 288.0, 4.0 },
                { 288.33149999999995, 4.07925 },
                { 288.63200000000006, 4.164 },
                { 288.9105, 4.24975 },
                { 289.176, 4.332 },
                { 289.4375, 4.40625 },
                { 289.70399999999995, 4.468 },
                { 289.98449999999997, 4.51275 },
                { 290.28799999999995, 4.535999999999999 },
                { 290.6235, 4.53325 },
                { 291.0, 4.5 },
                { 291.4235, 4.41975 },
                { 291.888, 4.288 },
                { 292.3845, 4.11825 },
                { 292.904, 3.9239999999999995 },
                { 293.4375, 3.71875 },
                { 293.976, 3.5160000000000005 },
                { 294.5105, 3.3292499999999996 },
                { 295.032, 3.1719999999999997 },
                { 295.5315, 3.0577499999999995 },
                { 296.0, 3.0 },
                { 296.445, 3.0010000000000003 },
                { 296.88, 3.0480000000000005 },
                { 297.30500000000006, 3.1319999999999997 },
                { 297.72, 3.2439999999999998 },
                { 298.125, 3.375 },
                { 298.52000000000004, 3.516 },
                { 298.905, 3.658 },
                { 299.28, 3.792 },
                { 299.645, 3.909 },
                { 300.0, 4.0 },
                { 300.33149999999995, 4.07925 },
                { 300.63200000000006, 4.164 },
                { 300.9105, 4.24975 },
                { 301.17600000000004, 4.332 },
                { 301.4375, 4.40625 },
                { 301.704, 4.468 },
                { 301.9845, 4.51275 },
                { 302.28799999999995, 4.535999999999999 },
                { 302.6235, 4.53325 },
                { 303.0, 4.5 },
                { 303.4235, 4.41975 },
                { 303.888, 4.288 },
                { 304.3845, 4.11825 },
                { 304.904, 3.9239999999999995 },
                { 305.4375, 3.71875 },
                { 305.97600000000006, 3.5160000000000005 },
                { 306.5105, 3.3292499999999996 },
                { 307.0319999999999, 3.1719999999999997 },
                { 307.53150000000005, 3.0577499999999995 },
                { 308.0, 3.0 },
                { 308.445, 3.0010000000000003 },
                { 308.88, 3.0480000000000005 },
                { 309.305, 3.1319999999999997 },
                { 309.71999999999997, 3.2439999999999998 },
                { 310.125, 3.375 },
                { 310.52000000000004, 3.516 },
                { 310.905, 3.658 },
                { 311.28, 3.792 },
                { 311.645, 3.909 },
                { 312.0, 4.0 },
                { 312.33149999999995, 4.07925 },
                { 312.632, 4.164 },
                { 312.9105, 4.24975 },
                { 313.176, 4.332 },
                { 313.4375, 4.40625 },
                { 313.704, 4.468 },
                { 313.9845, 4.51275 },
                { 314.28799999999995, 4.535999999999999 },
                { 314.6235, 4.53325 },
                { 315.0, 4.5 },
                { 315.42349999999993, 4.41975 },
                { 315.888, 4.288 },
                { 316.3845, 4.11825 },
                { 316.904, 3.9239999999999995 },
                { 317.4375, 3.71875 },
                { 317.976, 3.5160000000000005 },
                { 318.5104999999999, 3.3292499999999996 },
                { 319.032, 3.1719999999999997 },
                { 319.53149999999994, 3.0577499999999995 },
                { 320.0, 3.0 },
                { 320.445, 3.0010000000000003 },
                { 320.88, 3.0480000000000005 },
                { 321.30499999999995, 3.1319999999999997 },
                { 321.7199999999999, 3.2439999999999998 },
                { 322.125, 3.375 },
                { 322.52000000000004, 3.516 },
                { 322.905, 3.658 },
                { 323.28, 3.792 },
                { 323.645, 3.909 },
                { 324.0, 4.0 },
                { 324.33149999999995, 4.07925 },
                { 324.63199999999995, 4.164 },
                { 324.91049999999996, 4.24975 },
                { 325.176, 4.332 },
                { 325.4375, 4.40625 },
                { 325.704, 4.468 },
                { 325.98449999999997, 4.51275 },
                { 326.28799999999995, 4.535999999999999 },
                { 326.6235, 4.53325 },
                { 327.0, 4.5 },
                { 327.4235, 4.41975 },
                { 327.88800000000003, 4.288 },
                { 328.3845, 4.11825 },
                { 328.904, 3.9239999999999995 },
                { 329.4375, 3.71875 },
                { 329.976, 3.5160000000000005 },
                { 330.5105, 3.3292499999999996 },
                { 331.032, 3.1719999999999997 },
                { 331.53149999999994, 3.0577499999999995 },
                { 332.0, 3.0 },
                { 332.445, 3.0010000000000003 },
                { 332.88, 3.0480000000000005 },
                { 333.30499999999995, 3.1319999999999997 },
                { 333.71999999999997, 3.2439999999999998 },
                { 334.125, 3.375 },
                { 334.52, 3.516 },
                { 334.905, 3.658 },
                { 335.2799999999999, 3.792 },
                { 335.645, 3.909 },
                { 336.0, 4.0 },
                { 336.33149999999995, 4.07925 },
                { 336.632, 4.164 },
                { 336.91049999999996, 4.24975 },
                { 337.176, 4.332 },
                { 337.4375, 4.40625 },
                { 337.704, 4.468 },
                { 337.9845, 4.51275 },
                { 338.28799999999995, 4.535999999999999 },
                { 338.6235, 4.53325 },
                { 339.0, 4.5 },
                { 339.4235, 4.41975 },
                { 339.88800000000003, 4.288 },
                { 340.3845, 4.11825 },
                { 340.904, 3.9239999999999995 },
                { 341.4375, 3.71875 },
                { 341.97600000000006, 3.5160000000000005 },
                { 342.5105, 3.3292499999999996 },
                { 343.032, 3.1719999999999997 },
                { 343.5315, 3.0577499999999995 },
                { 344.0, 3.0 },
                { 344.44500000000005, 3.0010000000000003 },
                { 344.88, 3.0480000000000005 },
                { 345.30499999999995, 3.1319999999999997 },
                { 345.71999999999997, 3.2439999999999998 },
                { 346.125, 3.375 },
                { 346.52000000000004, 3.516 },
                { 346.905, 3.658 },
                { 347.28, 3.792 },
                { 347.645, 3.909 },
                { 348.0, 4.0 },
                { 348.33149999999995, 4.07925 },
                { 348.632, 4.164 },
                { 348.9105, 4.24975 },
                { 349.17599999999993, 4.332 },
                { 349.4375, 4.40625 },
                { 349.704, 4.468 },
                { 349.98449999999997, 4.51275 },
                { 350.28799999999995, 4.535999999999999 },
                { 350.6235, 4.53325 },
                { 351.0, 4.5 },
                { 351.4235, 4.41975 },
                { 351.88800000000003, 4.288 },
                { 352.38450000000006, 4.11825 },
                { 352.904, 3.9239999999999995 },
                { 353.4375, 3.71875 },
                { 353.976, 3.5160000000000005 },
                { 354.5105, 3.3292499999999996 },
                { 355.0319999999999, 3.1719999999999997 },
                { 355.5315, 3.0577499999999995 },
                { 356.0, 3.0 },
                { 356.44499999999994, 3.0010000000000003 },
                { 356.88000000000005, 3.0480000000000005 },
                { 357.305, 3.1319999999999997 },
                { 357.72, 3.2439999999999998 },
                { 358.125, 3.375 },
                { 358.52000000000004, 3.516 },
                { 358.905, 3.658 },
                { 359.28, 3.792 },
                { 359.645, 3.909 },
                { 360.0, 4.0 },
                { 360.33149999999995, 4.07925 },
                { 360.632, 4.164 },
                { 360.9105, 4.24975 },
                { 361.176, 4.332 },
                { 361.4375, 4.40625 },
                { 361.70400000000006, 4.468 },
                { 361.9845, 4.51275 },
                { 362.28799999999995, 4.535999999999999 },
                { 362.6235, 4.53325 },
                { 363.0, 4.5 },
                { 363.42350000000005, 4.41975 },
                { 363.88800000000003, 4.288 },
                { 364.3845, 4.11825 },
                { 364.904, 3.9239999999999995 },
                { 365.4375, 3.71875 },
                { 365.976, 3.5160000000000005 },
                { 366.5105, 3.3292499999999996 },
                { 367.032, 3.1719999999999997 },
                { 367.5315, 3.0577499999999995 },
                { 368.0, 3.0 },
                { 368.445, 3.0010000000000003 },
                { 368.88, 3.0480000000000005 },
                { 369.30499999999995, 3.1319999999999997 },
                { 369.72, 3.2439999999999998 },
                { 370.125, 3.375 },
                { 370.52, 3.516 },
                { 370.905, 3.658 },
                { 371.2799999999999, 3.792 },
                { 371.645, 3.909 },
                { 372.0, 4.0 },
                { 372.3315, 4.07925 },
                { 372.632, 4.164 },
                { 372.91049999999996, 4.24975 },
                { 373.176, 4.332 },
                { 373.4375, 4.40625 },
                { 373.704, 4.468 },
                { 373.98449999999997, 4.51275 },
                { 374.28799999999995, 4.535999999999999 },
                { 374.6235, 4.53325 },
                { 375.0, 4.5 },
                { 375.42349999999993, 4.41975 },
                { 375.88800000000003, 4.288 },
                { 376.3845, 4.11825 },
                { 376.904, 3.9239999999999995 },
                { 377.4375, 3.71875 },
                { 377.976, 3.5160000000000005 },
                { 378.5105, 3.3292499999999996 },
                { 379.0319999999999, 3.1719999999999997 },
                { 379.53149999999994, 3.0577499999999995 },
                { 380.0, 3.0 },
                { 380.44500000000005, 3.0010000000000003 },
                { 380.88, 3.0480000000000005 },
                { 381.305, 3.1319999999999997 },
                { 381.7199999999999, 3.2439999999999998 },
                { 382.125, 3.375 },
                { 382.52000000000004, 3.516 },
                { 382.905, 3.658 },
                { 383.28, 3.792 },
                { 383.645, 3.909 },
                { 384.0, 4.0 },
                { 384.3315, 4.07925 },
                { 384.63200000000006, 4.164 },
                { 384.91049999999996, 4.24975 },
                { 385.17600000000004, 4.332 },
                { 385.4375, 4.40625 },
                { 385.704, 4.468 },
                { 385.98449999999997, 4.51275 },
                { 386.28799999999995, 4.535999999999999 },
                { 386.62350000000004, 4.53325 },
                { 387.0, 4.5 },
                { 387.42349999999993, 4.41975 },
                { 387.888, 4.288 },
                { 388.3845, 4.11825 },
                { 388.904, 3.9239999999999995 },
                { 389.4375, 3.71875 },
                { 389.97600000000006, 3.5160000000000005 },
                { 390.5105, 3.3292499999999996 },
                { 391.032, 3.1719999999999997 },
                { 391.5315, 3.0577499999999995 },
                { 392.0, 3.0 },
                { 392.44499999999994, 3.0010000000000003 },
                { 392.88, 3.0480000000000005 },
                { 393.30499999999995, 3.1319999999999997 },
                { 393.71999999999997, 3.2439999999999998 },
                { 394.125, 3.375 },
                { 394.52000000000004, 3.516 },
                { 394.905, 3.658 },
                { 395.28, 3.792 },
                { 395.645, 3.909 },
                { 396.0, 4.0 },
                { 396.3315, 4.07925 },
                { 396.632, 4.164 },
                { 396.91049999999996, 4.24975 },
                { 397.176, 4.332 },
                { 397.4375, 4.40625 },
                { 397.704, 4.468 },
                { 397.98449999999997, 4.51275 },
                { 398.28799999999995, 4.535999999999999 },
                { 398.6235, 4.53325 },
            });

            auto afgeleide                = calculateAfgeleide(inputs);
            std::vector<std::size_t> kaas = findPeaksAndValleys(afgeleide, 0.001, 1);
            classifyWave(inputs, afgeleide, kaas);
            //            Matrix<100, 1, T> outputs(
            //                { 4,     4.03875, 4.1,   4.17625, 4.26,  4.34375, 4.42,  4.48125, 4.52,  4.52875, 4.5,
            //                4.41975,
            //                  4.288, 4.11825, 3.924, 3.71875, 3.516, 3.32925, 3.172, 3.05775, 3,     3.001,   3.048,
            //                  3.132,
            //                  3.244, 3.375,   3.516, 3.658,   3.792, 3.909,   4,     4.07925, 4.164, 4.24975, 4.332,
            //                  4.40625,
            //                  4.468, 4.51275, 4.536, 4.53325, 4.5,   4.41975, 4.288, 4.11825, 3.924, 3.71875, 3.516,
            //                  3.32925,
            //                  3.172, 3.05775, 3,     3.001,   3.048, 3.132,   3.244, 3.375,   3.516, 3.658,   3.792,
            //                  3.909,
            //                  4,     4.07925, 4.164, 4.24975, 4.332, 4.40625, 4.468, 4.51275, 4.536, 4.53325, 4.5,
            //                  4.41975,
            //                  4.288, 4.11825, 3.924, 3.71875, 3.516, 3.32925, 3.172, 3.05775, 3,     3.001,   3.048,
            //                  3.132,
            //                  3.244, 3.375,   3.516, 3.658,   3.792, 3.909,   4,     4.07925, 4.164, 4.24975, 4.332,
            //                  4.40625,
            //                  4.468, 4.51275, 4.536, 4.53325, 4.5 });
            //            Matrix<4, 1, T> params({ 1, 1, 1, 1 });
            //            gaussNewton(inputs, outputs, params);
            //            std::cout << params << std::endl;
        }
        catch (std::exception& e)
        {
            std::cout << e.what() << std::endl;
        }
    }

    virtual ~DepthProfiler()
    {
    }

    void addRawPoint(Matrix<N, 3, T> matrix)
    {
        raw_depth_data_.push_back(matrix);
    }

    void addProcessedPoint(Matrix<N, 3, T> matrix)
    {
        std::cout << matrix << std::endl;
        depth_data_.push_back(matrix);
    }

    Matrix<N, 3, T> getPointsWithDisplayGain(std::size_t index, uint16_t gain)
    {
        if (gain == 0)
        {
            return raw_depth_data_.at(index);
        }
        if (raw_depth_data_.size() <= index)
        {
            return raw_depth_data_.back();
        }
        if (raw_depth_data_.size() > index + gain)
        {
            gain = raw_depth_data_.size() - index;
        }

        Matrix<N, 3, T> temp = raw_depth_data_[index];
        // C = N + N * (gain - 1) worst
        // C = N best
        for (std::size_t i = 0; i < N; ++i)
        {
            if (temp.at(i, 0) == 0)
            {
                for (std::size_t k = 1; k < gain; ++i)
                {
                    if (raw_depth_data_[index + k].at(i, 0) != 0)
                    {
                        temp.at(i, 0) = raw_depth_data_[index + k].at(i, 0);
                        break;
                    }
                }
            }
        }

        return temp;
    }

    void getPointsWithDisplayGain(Matrix<N, 3, T>& matrix, std::size_t remove_index, std::size_t add_index)
    {
        if (remove_index >= raw_depth_data_.size() || add_index >= raw_depth_data_.size())
        {
            throw std::runtime_error("Index out of bounds.");
        }
        for (std::size_t i = 0; i < N; ++i)
        {
            if (raw_depth_data_[add_index].at(i, 0) != 0)
            {
                matrix.at(i, 0) = raw_depth_data_.at(remove_index).at(i, 0);
            }
            else if (raw_depth_data_[remove_index].at(i, 0) != 0)
            {
                for (std::size_t k = remove_index + 1; k < add_index; ++i)
                {
                    if (raw_depth_data_[k].at(i, 0) != 0)
                    {
                        matrix.at(i, 0) = raw_depth_data_[k].at(i, 0);
                        break;
                    }
                }
            }
        }
    }

    template <std::size_t H, std::size_t W>
    Matrix<H - 1, 2, T> calculateAfgeleide(Matrix<H, W, T>& matrix)
    {
        Matrix<H - 1, 2, T> result;

        // TODO: Do we get the correct matrix values?
        for (std::size_t i = 0; i < H - 1; ++i)
        {
            result[i][0] = matrix[i][0];
            result[i][1] = (matrix[i + 1][1] - matrix[i][1]) / (matrix[i + 1][0] - matrix[i][0]);
        }
        return result;
    }

    template <std::size_t H, std::size_t W>
    std::vector<std::size_t> findPeaksAndValleys(const Matrix<H, W, T>& afgeleide,
                                                 float afweiking,
                                                 std::size_t minimal_x_diff = 0)
    {
        std::vector<std::size_t> result;
        float last_found_x = 0;
        for (std::size_t i = 0; i < H - 1; ++i)
        {
            if (((afgeleide[i][1] < 0 && afgeleide[i + 1][1] > 0) ||
                 (afgeleide[i][1] > 0 && afgeleide[i + 1][1] < 0)) &&
                abs(afgeleide[i][0] - last_found_x) > minimal_x_diff)
            {
                last_found_x = afgeleide[i][0];
                result.push_back(i);
            }
        }
        std::cout << "Found: " << result.size() << " peaks or valleys" << std::endl;
        return result;
    }

    template <std::size_t H, std::size_t W>
    bool isPeak(Matrix<H, W, T>& afgeleide, std::size_t index)
    {
        assert(index + 2 < H);
        return afgeleide.at(index, 1) > afgeleide.at(index + 1, 1) &&
               afgeleide.at(index + 1, 1) > afgeleide.at(index + 2, 1);
    }

    template <std::size_t H, std::size_t W>
    void classifyWave(Matrix<H, W, T>& matrix,
                      Matrix<H - 1, W, T>& afgeleide,
                      std::vector<std::size_t> peaks_and_valleys)
    {
        for (std::size_t i = 0; i < peaks_and_valleys.size() - 3; ++i)
        {
            // Find a valley -> peak -> valley order.
            if (!isPeak(afgeleide, peaks_and_valleys[i]) && isPeak(afgeleide, peaks_and_valleys[i + 1]) &&
                !isPeak(afgeleide, peaks_and_valleys[i + 2]))  // Het is een dal
            {
                std::cout << "Found a wave from:" << peaks_and_valleys[i] << " to: " << peaks_and_valleys[i + 2]
                          << std::endl;
            }
        }
    }

    /**
     * Function that the GaussNewton tries to calculate the parameters for.
     */
    template <std::size_t H, std::size_t aH>
    T baseFunction(const Matrix<H, 1, T>& input, const Matrix<aH, 1, T>& params)
    {
        T x = input.at(0, 0);

        return params.at(0, 0) * std::pow(x, 3) + params.at(1, 0) * std::pow(x, 2) + params.at(2, 0) * x +
               params.at(3, 0);
    }

    /**
     * Calculated derivative using: (y1 - y0)/(x1-x0).
     * But when doing so, it will change a parameter with a slight amount (DERIV_STEP).
     */
    template <std::size_t H, std::size_t aH>
    T calculateDerivative(const Matrix<H, 1, T>& input, const Matrix<aH, 1, T>& params, std::size_t param_number)
    {
        // Make copy of the current parameters.
        Matrix<aH, 1, T> params1(params);
        Matrix<aH, 1, T> params2(params);

        // Use central difference  to get derivative.
        params1.at(param_number, 0) -= STEP_SIZE;
        params2.at(param_number, 0) += STEP_SIZE;

        T p1 = baseFunction(input, params1);
        T p2 = baseFunction(input, params2);

        return (p2 - p1) / (2 * STEP_SIZE);
    }

    /**
     * Solve the non-linear least square problem using the Gauss-Newton algorithme.
     * https://en.wikipedia.org/wiki/Gauss%E2%80%93Newton_algorithm
     */
    template <std::size_t H, std::size_t W, std::size_t aH>
    void gaussNewton(const Matrix<H, W, T>& inputs,
                     const Matrix<H, W, T>& outputs,
                     Matrix<aH, 1, T>& params,
                     const float precision = 1e-8)
    {
        assert(H >= W);

        Matrix<H, 1, T> residuals;  // Residual matrix
        Matrix<H, aH, T> jacobian;  // Jacobian matrix
        Matrix<1, 1, T> input;      // Single row input

        float last_deviation = 0;

        for (std::size_t i = 0; i < MAX_ITERATIONS; i++)
        {
            float total_deviation = 0;

            for (std::size_t j = 0; j < H; j++)
            {
                // Some compile time optimalisations.
                if
                    constexpr(W == 1)
                    {
                        input.at(0, 0) = inputs.at(j, 0);
                    }
                else
                {
                    for (std::size_t k = 0; k < W; k++)
                    {
                        input.at(0, k) = inputs.at(j, k);
                    }
                }

                // r_i(beta)= y_i - f(x_i, \beta).
                residuals.at(j, 0) = outputs.at(j, 0) - baseFunction(input, params);
                // Add the square difference of the last derived parameter and the wanted value to the total deviation.
                total_deviation += residuals.at(j, 0) * residuals.at(j, 0);

                for (std::size_t k = 0; k < aH; k++)
                {
                    jacobian.at(j, k) = calculateDerivative(input, params, k);
                }
            }

            // Mean deviation over all the inputs.
            total_deviation /= H;

            // TODO: Maybe change this check to only check for the current deviation |total_deviation| < precision
            // If the deviation is since last iteration is smaller then precision, we have found the best optimal value.
            if (std::abs(total_deviation - last_deviation) < precision)
            {
                break;
            }

            // beta^(s+1) = beta^s - (Jf.T * Jf)^-1 * Jf.T * r(beta^s)
            auto jacobijnTranspose = jacobian.transpose();
            auto delta             = (jacobijnTranspose * jacobian).inverse() * jacobijnTranspose * residuals;
            last_deviation         = total_deviation;

            params += delta;

            if (std::isnan(total_deviation))
            {
                throw std::runtime_error("NaN is found");
            }
            if (i + 1 == MAX_ITERATIONS)
            {
                throw std::runtime_error("Took to many iterations");
            }

            std::cout << "Iteration: " << i << " " << total_deviation << std::endl;
        }
    }

  private:
    FileHandler file_instance_;
    std::vector<Matrix<N, 3, T>> raw_depth_data_;
    std::vector<Matrix<N, 3, T>> depth_data_;
};

} /* namespace Controller */

#endif /* SRC_DEPTHPROFILER_HPP_ */
